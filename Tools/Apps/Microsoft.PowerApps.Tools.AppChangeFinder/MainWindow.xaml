<Window x:Class="Microsoft.PowerApps.Tools.AppChangeFinder.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Microsoft.PowerApps.Tools.AppChangeFinder"
        mc:Ignorable="d" x:Name="UI"

        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:common="clr-namespace:Microsoft.PowerApps.Tools.AppChangeFinder.Common"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}"
        Title="{Binding Title}" Height="950" Width="1200" Icon="palogo.ico"
        StateChanged="Window_StateChanged" >
    <Window.DataContext>
        <local:ChangeFinderViewModel />
    </Window.DataContext>
    <Window.Resources>
        <Style x:Key="SearchButtonStyle" TargetType="Button">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border" BorderThickness="0" BorderBrush="Black" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" Value="0.8" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="LineBrushColor" Color="#FF959595" />
        <Style x:Key="ListViewItemStyle" TargetType="{x:Type ListViewItem}">
            <Setter Property="Focusable" Value="False" />
            <Setter Property="Template" Value="{DynamicResource ListBoxItemControlTemplate}" />
        </Style>
        <ControlTemplate x:Key="ListBoxItemControlTemplate" TargetType="{x:Type ListBoxItem}">
            <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="HeaderTextBlockStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize" Value="16"></Setter>
            <Setter Property="Margin" Value="0 0 0 0"></Setter>
            <Setter Property="TextAlignment" Value="Center"></Setter>
            <Setter Property="Background" Value="LightGray"></Setter>
        </Style>
        <ItemsPanelTemplate x:Key="ItemsPanelTemplate">
            <VirtualizingStackPanel Orientation="Vertical" IsItemsHost="True" />
        </ItemsPanelTemplate>
        <DataTemplate x:Key="DataTemplateDiff">
            <StackPanel Orientation="Vertical">
                <TextBlock Text="{Binding Value}" MinWidth="100" Margin="0" Padding="3">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Background" Value="#FFCEF37E" />
                            <Setter Property="Foreground" Value="Black" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsBaseLine}" Value="False">
                                    <Setter Property="Background" Value="#FFFFA7A7" />
                                    <Setter Property="Foreground" Value="Black" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="DataTemplatePropDiff">
            <StackPanel Orientation="Vertical">
                <TextBlock Text="{Binding Value}" TextWrapping="Wrap" MinWidth="100">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Background" Value="White" />
                            <Setter Property="Foreground" Value="Black" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsBaseLine}" Value="True">
                                    <Setter Property="Background" Value="#FFCEF37E" />
                                    <Setter Property="Foreground" Value="Black" />
                                    <Setter Property="Margin" Value="0 5" />
                                    <Setter Property="Visibility" Value="{Binding ElementName=ShowBaselineCheckBox, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </StackPanel>
        </DataTemplate>
        <common:EnumBooleanConverter x:Key="enumBoolConverter" />
    </Window.Resources>
    <Grid Margin="0 0 0 0">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid Margin="0,0,0.2,0.2" Grid.Row="1" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.1*" />
                <ColumnDefinition Width="0.2*"/>
                <ColumnDefinition Width="0.4*"/>
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Menu x:Name="menu" HorizontalAlignment="Left" Width="232" Grid.Column="0" Margin="0,10" Grid.ColumnSpan="2">
                <MenuItem Header="File" Height="23">
                    <MenuItem Header="Open" Command="{Binding BrowseBtnClick}" />
                    <MenuItem Header="Exit"  />
                </MenuItem>
            </Menu>
            <StackPanel Orientation="Horizontal" Grid.Column="1" Margin="1.8,0,0.2,0">
                <Label FontWeight="Bold" Margin="0,9,0,0" Width="128">Application Options</Label>
                <CheckBox IsChecked="{Binding ShowBaseline}" Margin="0,0" Height="16" x:Name="ShowBaselineCheckBox" Content="Show Baseline"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal" Margin="50,20,10.2,20" Grid.Column="2">
                <TextBox BorderThickness="1" Background="White" Text="{Binding SearchTextBox, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextChanged="SearchTextBox_TextChanged" VerticalContentAlignment="Stretch" VerticalAlignment="Center" Width="273" HorizontalAlignment="Right" Margin="0,-14,0,-8" Height="22" />
                <Button  Command="{Binding SearchBtnClick}" Style="{DynamicResource MaterialDesignToolButton}" x:Name="SearchButton" CommandParameter="{Binding Text, ElementName=SearchBox}" Height="Auto" Width="20" Margin="0,-14,0,-8">
                    <materialDesign:PackIcon Kind="Magnify" VerticalAlignment="Stretch" HorizontalAlignment="Left" RenderTransformOrigin="-0.175,0.525" />
                </Button>
                <Button  Command="{Binding ClearSearchBtnClick}" Style="{DynamicResource MaterialDesignToolButton}" x:Name="ClearSearchButton" Height="Auto" Width="22" Margin="0,-14,0,-8">
                    <materialDesign:PackIcon Kind="Close" VerticalAlignment="Stretch" HorizontalAlignment="Left" RenderTransformOrigin="-0.175,0.525" />
                </Button>
                <RadioButton IsChecked="{Binding SearchFilter, ConverterParameter={x:Static local:SearchFilters.All}, Converter={StaticResource enumBoolConverter}, Mode=TwoWay}" Margin="10,-12,0,-8" GroupName="SearchFilter" Content="All" Width="36"/>
                <RadioButton IsChecked="{Binding SearchFilter, ConverterParameter={x:Static local:SearchFilters.Controls}, Converter={StaticResource enumBoolConverter}, Mode=TwoWay}" Margin="10,-12,0,-8" GroupName="SearchFilter" Content="Controls" Width="66"/>
                <RadioButton IsChecked="{Binding SearchFilter, ConverterParameter={x:Static local:SearchFilters.Properties}, Converter={StaticResource enumBoolConverter}, Mode=TwoWay}" Margin="10,-12,0,-8" GroupName="SearchFilter" Content="Properties" Width="76"/>
                <RadioButton IsChecked="{Binding SearchFilter, ConverterParameter={x:Static local:SearchFilters.Events}, Converter={StaticResource enumBoolConverter}, Mode=TwoWay}" Margin="10,-12,0,-8" GroupName="SearchFilter" Content="Events" Width="76"/>
            </StackPanel>
        </Grid>
        <xctk:BusyIndicator IsBusy="{Binding IsLoading}" x:Name="BusyIndicator"  Grid.Row="2" Margin="0,0,0,-1">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="2" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.5*" />
                    <ColumnDefinition Width="5" />
                    <ColumnDefinition Width="0.5*" />
                    <ColumnDefinition Width="5" />
                    <ColumnDefinition Width="2*" />
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Row="0" Style="{StaticResource HeaderTextBlockStyle}" Grid.Column="0">Screen</TextBlock>
                <TextBlock Grid.Row="0" Style="{StaticResource HeaderTextBlockStyle}" Grid.Column="2">Control</TextBlock>
                <TextBlock Grid.Row="0" Style="{StaticResource HeaderTextBlockStyle}" Grid.Column="4">Property</TextBlock>
                <Border Grid.Row="1" Grid.ColumnSpan="7" BorderBrush="Black" BorderThickness="1"></Border>
                <ScrollViewer MaxHeight="800" VerticalScrollBarVisibility="Auto" Grid.Row="2" Grid.Column="0" >
                    <ListView ItemsSource="{Binding ScreenList}" SelectedItem="{Binding SelectedScreen}" Margin="0,0,0.2,0.4">
                        <ListView.ItemTemplate >
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal" Grid.Row="2" Grid.Column="0"  Height="20">
                                    <Image Source="{Binding ScreenIcon}" Width="14" />
                                    <TextBlock Text="{Binding ScreenName}" Margin="5, 1"></TextBlock>
                                </StackPanel>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </ScrollViewer>
                <GridSplitter Grid.Row="2"  Grid.Column="1" Width="5" HorizontalAlignment="Stretch" />
                <ScrollViewer MaxHeight="800" VerticalScrollBarVisibility="Auto" Grid.Row="2" Grid.Column="2">
                    <ListView ItemsSource="{Binding SelectedControls}" SelectedItem="{Binding SelectedControl}" Margin="0,0,0.2,0.4">
                        <ListView.ItemTemplate >
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal" Height="20">
                                    <Image Source="{Binding ControlIcon}" Width="16" />
                                    <TextBlock Text="{Binding ControlName}" Margin="5, 0"></TextBlock>
                                </StackPanel>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </ScrollViewer>
                <GridSplitter Grid.Row="2" Grid.Column="3" Width="5" HorizontalAlignment="Stretch" />
                <ScrollViewer MaxHeight="800" VerticalScrollBarVisibility="Auto" Grid.Row="2" Grid.Column="4" >
                    <ListView ItemsSource="{Binding SelectedProperties}" Margin="0,0,0.2,0.4" ItemContainerStyle="{DynamicResource ListViewItemStyle}">
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <Border BorderBrush="LightGray" BorderThickness="0 0 0 1">
                                    <ScrollViewer VerticalScrollBarVisibility="Auto">
                                        <StackPanel Orientation="Horizontal" Height="Auto" >
                                            <Border BorderBrush="LightGray" BorderThickness="0 0 1 0" Height="25">
                                                <TextBlock Text="{Binding PropertyName}" Width="120" Height="15" VerticalAlignment="Center" Margin="10, 7" FontWeight="Bold" TextWrapping="Wrap" />
                                            </Border>
                                            <ListView ItemsSource="{Binding Properties}" Width="490" ScrollViewer.HorizontalScrollBarVisibility="Disabled" BorderThickness="0 0 0 0" IsEnabled="True" ItemTemplate="{DynamicResource DataTemplatePropDiff}" Height="Auto" />
                                        </StackPanel>
                                    </ScrollViewer>
                                </Border>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </ScrollViewer>
            </Grid>
        </xctk:BusyIndicator>
        <Grid Margin="10,1,-9.8,13.8" Grid.RowSpan="2" Grid.Row="3">
            <StackPanel Margin="0" Orientation="Vertical" VerticalAlignment="Center">
                <StackPanel Orientation="Horizontal" Height="40">
                    <Rectangle Fill="#FFCEF37E" HorizontalAlignment="Left" Height="7.517" VerticalAlignment="Center" Width="24" Margin="0" />
                    <TextBlock Text="Baseline value" VerticalAlignment="Center" Foreground="#DD575757" FontSize="10" HorizontalAlignment="Left" Margin="5,0,0,0" />
                </StackPanel>
            </StackPanel>
        </Grid>
        <StackPanel Margin="0,10,10.2,13.8" Grid.Row="3" Orientation="Horizontal" HorizontalAlignment="Right" Grid.RowSpan="2">
            <Button Width="125" Content="Save as HTML"  Height="Auto" Command="{Binding DownloadHTMLBtnClick}" Margin="0,10,10,-6" ></Button>
            <Button  Content="Export " Height="Auto" Width="87" Command="{Binding ExportToJSONBtnClick}" Margin="0,10,0,-6" />
        </StackPanel>
    </Grid>
</Window>